import { Task, TaskWithVariables } from "./Types";
type JSON = string | number | boolean | JSON[] | JSONDoc[];
export interface JSONDoc {
    [key: string]: JSON;
}
/**
 * Shallow escape
 * @param variable
 * @returns
 */
export declare const escape: (variable: JSON) => string | number | boolean;
export declare const encodeTaskVariablesForGraphQL: (variables: JSONDoc) => {
    name: string;
    value: string | number | boolean;
}[];
/**
 * @description GraphQL returns variables as an array of {name: string, value: string} object.
 * This function turns this into a plain JS object.
 * @param task
 * @returns
 */
export declare const decodeTaskVariablesFromGraphQL: <T>(task: Task) => TaskWithVariables<T>;
/**
 * @description Helper method to throw if the GraphQL endpoint returns an error, or destructure the
 * response data if the GraphQL returned data.
 * @param res
 * @throws
 */
export declare const getResponseDataOrThrow: <T>(res: {
    data: T;
} | {
    errors: any;
}) => T;
export {};
