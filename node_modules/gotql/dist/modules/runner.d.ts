import { GotQL } from '../types/generics';
import { QueryType } from '../types/QueryType';
import { UserOptions } from '../types/UserOptions';
import { Got as GotInstance } from 'got';
/**
 *
 * @param {string} endPoint GraphQL endpoint to query on
 * @param {queryType} query A JSON-like query type
 * @param {userOpts} [options] User options
 * @param {string} type Can be 'query' or 'mutation'
 * @param {any} got The Got object as an injected dependency (for test modularity)
 * @return {{data: object, statusCode: number, message: string}} Got handled response
 */
export declare function run(endPoint: string, query: QueryType, type: GotQL.ExecutionType, got: GotInstance, options?: UserOptions): Promise<GotQL.Response>;
//# sourceMappingURL=runner.d.ts.map